{"version":3,"sources":["MapContainer.js","App.js","reportWebVitals.js","index.js"],"names":["GoogleApiWrapper","apiKey","props","google","useState","data","setData","useEffect","Tabletop","init","key","callback","googleData","console","log","showInfoWindow","setShowInfoWindow","onMarkerClick","zoom","onClick","name","paths","lat","lng","visible","onOpen","onClose","style","backgroundColor","minWidth","minHeight","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAoDeA,iCAAiB,CAC9BC,OAAQ,2CADKD,EA/Cf,SAAsBE,GAAQ,IACpBC,EAAWD,EAAXC,OADmB,EAGHC,mBAAS,IAHN,mBAGpBC,EAHoB,KAGdC,EAHc,KAI3BC,qBAAU,WACRC,IAASC,KAAK,CACZC,IAAK,8FACLC,SAAU,SAACC,GACTN,EAAQM,SAKdC,QAAQC,IAAIT,GAbe,MAeiBD,oBAAS,GAf1B,mBAepBW,EAfoB,KAeJC,EAfI,KAiB3B,SAASC,IACPD,GAAmBD,GACnBF,QAAQC,IAAI,WAOd,OACE,eAAC,MAAD,CAAKX,OAAQA,EAAQe,KAAM,GAA3B,UACE,cAAC,SAAD,CAAQC,QAASF,EAAeG,KAAM,qBACtC,cAAC,UAAD,CACEC,MAAO,CACL,CAAEC,IAAK,YAAaC,KAAM,aAC1B,CAAED,IAAK,YAAaC,KAAM,aAC1B,CAAED,IAAK,WAAYC,KAAM,YACzB,CAAED,IAAK,YAAaC,KAAM,cAE5BJ,QAASF,IAEX,cAAC,aAAD,CAAYO,QAAST,EAAgBU,OAAQ,kBAAMZ,QAAQC,IAAI,WAAWY,QAhB9E,WACEV,GAAkB,IAehB,SACE,qBAAKW,MAAO,CAAEC,gBAAiB,MAAOC,SAAU,MAAOC,UAAW,OAAlE,SACE,8C,MClCKC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ddd9bb5d.chunk.js","sourcesContent":["// import react from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper, Polygon } from \"google-maps-react\";\nimport Tabletop from \"tabletop\";\n\nfunction MapContainer(props) {\n  const { google } = props;\n\n  const [data, setData] = useState({});\n  useEffect(() => {\n    Tabletop.init({\n      key: \"https://docs.google.com/spreadsheets/d/19Za-wgC1G_-TcFNm3j7iMpbmbF9P-PoaA_qKKhyRQCs/pubhtml\",\n      callback: (googleData) => {\n        setData(googleData);\n      },\n    });\n  });\n\n  console.log(data);\n\n  const [showInfoWindow, setShowInfoWindow] = useState(true);\n\n  function onMarkerClick() {\n    setShowInfoWindow(!showInfoWindow);\n    console.log(\"clicked\");\n  }\n\n  function onInfoWindowClose() {\n    setShowInfoWindow(false);\n  }\n\n  return (\n    <Map google={google} zoom={14}>\n      <Marker onClick={onMarkerClick} name={\"Current location\"} />\n      <Polygon\n        paths={[\n          { lat: 37.78178778, lng: -122.4223591 },\n          { lat: 37.78282227, lng: -122.4141193 },\n          { lat: 37.7797357, lng: -122.413497 },\n          { lat: 37.77418972, lng: -122.4206854 },\n        ]}\n        onClick={onMarkerClick}\n      />\n      <InfoWindow visible={showInfoWindow} onOpen={() => console.log(\"opened\")} onClose={onInfoWindowClose}>\n        <div style={{ backgroundColor: \"red\", minWidth: \"200\", minHeight: \"200\" }}>\n          <h1>hi</h1>\n        </div>\n      </InfoWindow>\n    </Map>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBoaMwtEv26-QexJ0Zge-FhO08jVdYTioQ\",\n})(MapContainer);\n","import MapContainer from \"./MapContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MapContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}